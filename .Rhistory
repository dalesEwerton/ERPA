return(existe)
}
moda <- function(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
}
View(dados)
ano
dados <- read.csv("data.csv")
#Substituição da virgula pelo ponto decimal
dados$Resultado_da_Pesquisa <- as.numeric(sub(",", ".", dados$Resultado_da_Pesquisa, fixed = TRUE))
dados$Brancos_Nulos <- as.numeric(sub(",", ".", dados$Brancos_Nulos, fixed = TRUE))
dados$Indecisos <- as.numeric(sub(",", ".", dados$Indecisos, fixed = TRUE))
attach(dados)
#lista com nome dos candidatos da nossa base de dados
candidatos <- levels(Nome_do_Candidato)
#lista com nome dos institutos da nossa base de dados
pesquisa <- levels(Instituto)
#lista com os anos da nossa base de dados
ano <- unique(Ano_da_Eleicao);
#qual a média de cada candidato levando em consideração pesquisa e ano?
mediaCandidatos = function () {
contador <- 1;
mediaDosCandidatos <- matrix(NA, nrow = 200, ncol = 4);
for( i in 1 : length(candidatos)){
nomeCandidato <- candidatos[i];
for(j in 1: length(pesquisa)){
for(k in 1: length(ano)){
existe <- existePesquisa(nomeCandidato,(pesquisa[j]), ano[k]);
if(existe==TRUE){
intencoes <- filtraPorCandidatoInstitutoEAno(nomeCandidato,(pesquisa[j]),ano[k]);
media <- mean(intencoes$Resultado_da_Pesquisa);
mediaDosCandidatos[contador,1] = nomeCandidato;
mediaDosCandidatos[contador,2] = pesquisa[j];
mediaDosCandidatos[contador,3] = media;
mediaDosCandidatos[contador,4] = ano[k];
contador= contador+1;
}
}
}
}
return(mediaDosCandidatos)
}
#qual a media das pesquisas de intenção de voto sobre um candidato?
mediaCandidatoPesquisado=function(candidatoPesquisado){
contador <- 1;
mediaDosCandidatos <- matrix(NA, nrow = 200, ncol = 4);
nomeCandidato <- candidatoPesquisado;
for(j in 1: length(pesquisa)){
for(k in 1: length(ano)){
existe <- existePesquisa(nomeCandidato,(pesquisa[j]), ano[k]);
if(existe==TRUE){
intencoes <- filtraPorCandidatoInstitutoEAno(nomeCandidato,(pesquisa[j]),ano[k]);
media <- mean(intencoes$Resultado_da_Pesquisa);
mediaDosCandidatos[contador,1] = nomeCandidato;
mediaDosCandidatos[contador,2] = pesquisa[j];
mediaDosCandidatos[contador,3] = media;
mediaDosCandidatos[contador,4] = ano[k];
contador= contador+1;
}
}
}
return(mediaDosCandidatos)
}
#qual a media dos candidatos em um determinado ano?
mediaCandidatosPorAno=function(anoPesquisado){
contador <- 1;
mediaDosCandidatos <- matrix(NA, nrow = 100, ncol = 4);
for( i in 1 : length(candidatos)){
nomeCandidato <- candidatos[i];
for(j in 1: length(pesquisa)){
existe <- existePesquisa(nomeCandidato,(pesquisa[j]), anoPesquisado);
if(existe==TRUE){
intencoes <- filtraPorCandidatoInstitutoEAno(nomeCandidato,(pesquisa[j]),anoPesquisado);
media <- mean(intencoes$Resultado_da_Pesquisa);
mediaDosCandidatos[contador,1] = nomeCandidato;
mediaDosCandidatos[contador,2] = pesquisa[j];
mediaDosCandidatos[contador,3] = media;
mediaDosCandidatos[contador,4] = anoPesquisado;
contador= contador+1;
}
}
}
return(mediaDosCandidatos)
}
#Qual foi o menor e o maior valor das intencoes de voto para o candidato
menorEMaiorResultadoDoCandidato=function(candidatoNome, anoPesquisa){
intencoes <- filtraPorCandidatoEAno(candidatoNome, anoPesquisa);
return(range(intencoes$Resultado_da_Pesquisa));
}
#Qual o ano em que mais temos dados de pesquisas?
anoComMaisPesquisas=function(){
return(moda(Ano_da_Eleicao));
}
#Qual o candidato em que mais temos dados de pesquisas?
candidatoComMaisPesquisas=function(){
return(moda(Nome_do_Candidato));
}
#Qual o instituto em que mais temos dados de pesquisas?
institutoComMaisPesquisas=function(){
return(moda(Instituto));
}
#Qual o partido em que mais temos dados de pesquisas?
partidoComMaisPesquisas=function(){
return(moda(Partido_do_Candidato));
}
filtraPorCandidatoEAno = function(candidatoNome, anoPesquisa){
candidatoEscolhido <- subset(dados, Nome_do_Candidato == candidatoNome);
anoEscolhido <- subset(candidatoEscolhido, Ano_da_Eleicao==anoPesquisa);
return(anoEscolhido)
}
filtraPorCandidatoInstitutoEAno = function(nomeCandidato, nomeInstituto, anoPesquisa){
candidatoEscolhido <- subset(dados, Nome_do_Candidato == nomeCandidato);
instituto <- subset(candidatoEscolhido, Instituto == nomeInstituto);
a <- subset(instituto, Ano_da_Eleicao == anoPesquisa)
return(a);
}
existePesquisa= function(nomeCandidato,pesquisa, ano){
existe <- FALSE;
candidatoEscolhido <- subset(dados, Nome_do_Candidato == nomeCandidato);
for( i in 1 : length(candidatoEscolhido$Nome_do_Candidato)){
if(candidatoEscolhido[,4][i] == pesquisa && candidatoEscolhido[,6][i] == ano){
existe <- TRUE;
}
}
return(existe)
}
moda <- function(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
}
partidoComMaisPesquisas()
install.packages("caTools")
install.packages("stringi")
install.packages("rmarkdown")
devtools::install_url("http://cran.r-project.org/src/contrib/rmarkdown0.5.1.tar.gz")
getOption("repos")
1
install.packages("rmarkdown", dependencies=TRUE)
install.packages("backports", type="binary")
install.packages(c("httpuv", "stringi"))
install.packages("caTools", dependencies = TRUE)
install.packages("caTools", dependencies = TRUE)
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
devtools::install_github("rstudio/rmarkdown")
devtools::install_github("rstudio/rmarkdown", force = TRUE)
install.packages('caTools', dependencies = TRUE, force = TRUE)
library(tidyverse)
library(readr)
data <- read_csv("data/data.csv")
View(data)
library(tidyverse)
data <- read_csv("data/data.csv")
library(tidyverse)
data <- read_csv("../data/data.csv")
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
library(tidyverse)
data <- read_csv("../data/data.csv")
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
brancos_media <- median(data$Brancos_Nulos)
data <- na.action(data$Brancos_Nulos, brancos_media)
data <- read_csv("../data/data.csv")
na.action(data$Brancos_Nulos, brancos_media)
data$Brancos_Nulos
#Trocando NA's por mediana da coluna
brancos_media <- median(data$Brancos_Nulos)
if(data$Brancos_Nulos == NA) {
data$Brancos_Nulos <- brancos_media
}
brancos_media <- median(data$Brancos_Nulos)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
brancos_mediana
brancos_mediana <- mean(data$Brancos_Nulos, na.rm = TRUE)
brancos_mediana
data$Brancos_Nulos
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- mean(data$Brancos_Nulos, na.rm = TRUE)
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
brancos_mediana <- mean(as.numeric(data$Brancos_Nulos), na.rm = TRUE)
brancos_mediana <- mean(as.numeric(data$Brancos_Nulos), na.rm = TRUE)
View(data)
data$Brancos_Nulos[1]
as.numeric(data$Brancos_Nulos[1])
as.double(data$Brancos_Nulos[1])
data$Brancos_Nulos[1]
#Trocando NA's por mediana da coluna
mean(data$Brancos_Nulos)
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
mean(data$Indecisos)
#Trocando NA's por mediana da coluna
mean(data$Ano_da_Eleicao)
Indecisos
#Trocando NA's por mediana da coluna
mean(data$Indecisos)
#Trocando NA's por mediana da coluna
mean(as.numeric(data$Indecisos))
#Trocando NA's por mediana da coluna
data$Indecisos <- as.double(data$Indecisos)
mean(data$Indecisos)
library(tidyverse)
data <- read_csv("../data/data.csv")
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
mean(data$Indecisos)
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_median <- median(data$Brancos_Nulos, na.rm = TRUE)
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
View(data)
View(data)
View(data)
candidados = data %>%
group_by(Nome_do_Candidato)
View(candidados)
#Exemplo guia
candidados = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(usoPartido))
#Exemplo guia
candidados = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
View(candidados)
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidados = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x = reorder(Nome_do_Candidato), - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu),
fill = as.factor(Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(fill = "Candidatos", title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x = reorder(Nome_do_Candidato), - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu),
fill = as.factor(Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(fill = "Candidatos", title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x = reorder(Nome_do_Candidato), - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu),
fill = as.factor(Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(fill = "Candidatos", title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados")
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x = reorder(Nome_do_Candidato), - as.numeric(vezes_apareceu),
y = as.factor(vezes_apareceu)),
fill = as.factor(Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(fill = "Candidatos", title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x=reorder(Nome_do_Candidato, - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu),
fill = as.factor(Nome_do_Candidato))) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(fill = "Candidatos", title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x=reorder(Nome_do_Candidato, - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu))) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x=reorder(Nome_do_Candidato, - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu), fill = Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
library(tidyverse)
data <- read_csv("../data/data.csv")
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Exemplo guia de como responder
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
ggplot(data = candidatos,
aes(x=reorder(Nome_do_Candidato, - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu), fill = Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
#Responder Aqui
library(keras)
install_tensorFlow()
devtools::install_github("rstudio/keras")
library(keras)
library(keras)
library(keras)
install.packages(c("httpuv", "stringi"))
library(keras)
install_keras("conda")
library(keras)
install_keras(method = c("auto", "virtualenv", "conda"), conda = "auto",
tensorflow = "default", extra_packages = NULL)
#HELLO WORLD DEEP LEARNING
mnist <- dataset_minist()
mnist <- dataset_mnist()
mnist <- dataset_mnist()
install.packages("caret")
library(caret)
#HELLO WORLD DEEP LEARNING
partition <- createDataPartition(y=data$Resultado_da_Pesquisa,
p=.8, list = FALSE)
fit_data <- data[partition,]
test_data <- data[-partition,]
model <- keras_model_sequential()
model <- keras_model_sequential()
#HELLO WORLD DEEP LEARNING
partition <- createDataPartition(y=data$Resultado_da_Pesquisa,
p=.8, list = FALSE)
fit_data <- data[partition,]
test_data <- data[-partition,]
model <- keras_model_sequential()
#HELLO WORLD DEEP LEARNING
partition <- createDataPartition(y=data$Resultado_da_Pesquisa,
p=.8, list = FALSE)
fit_data <- data[partition,]
test_data <- data[-partition,]
model <- keras_model_sequential()
