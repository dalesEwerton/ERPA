set.seed(500)
#Defininindo o particionamento dos dados
partition <- createDataPartition(y=data_erpa$Mes, p=.8, list=FALSE)
fit_data  <- data_erpa[partition,]
test_data <- data_erpa[-partition,]
ctrl <- trainControl(method = "cv", number = 5, search = "random")
set.seed(13)
#Neural Network
modelo.net <- train(
Resultado_Final ~.,
data       = fit_data,
method     = "nnet",
trControl  = ctrl,
preProcess = c('nzv'),
na.action  = na.omit)
net.predict <- predict(modelo.net, test_data)
test_data$pred <- net.predict
ggplot(test_data, aes(x = pred, y = Resultado_Final)) +
labs(title = "Modelo Neural Network - Obs vs Pred", x = "Predição", y = "Observado")+
geom_jitter(colour = "red") +
geom_abline(colour = "blue")
grid <- expand.grid(k = 1:50)
modelo.knn <- train(
Resultado_Final ~.,
data       = fit_data,
method     = "knn",
trControl  = ctrl,
preProcess = c('nzv'),
tuneGrid   = grid,
na.action  = na.omit
)
knn.predict <- predict(modelo.knn, test_data)
library(tidyverse)
data <- read_csv("../data/data.csv")
#Code to correct 'Indecisos'
index <- 1
for (dt in data$Indecisos) {
if(dt > 1) {
data$Indecisos[index] <- dt/1000
}
index = index + 1
}
#Code to correct 'Brancos Nulos'
median <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- median
index <- 1
for (dt in data$Brancos_Nulos) {
if(dt > 1) {
data$Brancos_Nulos[index] <- dt/1000
}
index = index + 1
}
#Trocando NA's por mediana da coluna
brancos_mediana <- median(data$Brancos_Nulos, na.rm = TRUE)
data$Brancos_Nulos[is.na(data$Brancos_Nulos)] <- brancos_mediana
#Funções utilizadas nas respostas
qntInstitutosBaseDeDados <- function(){
institutos = data %>%
group_by(Instituto) %>%
summarise(vezes_intituto_apareceu = length(Instituto)) %>%
arrange(desc(vezes_intituto_apareceu))
return(institutos);
}
qntPartidosNaBaseDeDados<- function(){
partidos = data %>%
group_by(Partido_do_Candidato) %>%
summarise(vezes_partido_apareceu = length(Partido_do_Candidato)) %>%
arrange(desc(vezes_partido_apareceu))
return(partidos)
}
qntAnosNaBaseDeDados <- function(){
anos = data %>%
group_by(Ano_da_Eleicao) %>%
summarise(vezes_anos_apareceu = length(Ano_da_Eleicao)) %>%
arrange(desc(vezes_anos_apareceu))
return(anos);
}
qntCandidatosNaBaseDeDados <- function(){
candidatos = data %>%
group_by(Nome_do_Candidato) %>%
summarise(vezes_apareceu = length(Nome_do_Candidato)) %>%
arrange(desc(vezes_apareceu))
return(candidatos)
}
filtraPorCandidatoEAno <- function(candidatoNome, anoPesquisa){
candidatoEscolhido <- subset(data, data$Nome_do_Candidato == candidatoNome);
anoEscolhido <- subset(candidatoEscolhido, candidatoEscolhido$Ano_da_Eleicao == anoPesquisa);
return(anoEscolhido)
}
menorMaiorPesquisaPorCandidato <- function(candidatoNome, anoPesquisa){
intencoes <- filtraPorCandidatoEAno(candidatoNome , anoPesquisa);
return(range(intencoes$Resultado_da_Pesquisa))
}
existePesquisa= function(nomeCandidato,pesquisa, anoPesquisa){
existe <- FALSE;
candidatoEscolhido <- subset(data, data$Nome_do_Candidato == nomeCandidato);
for( i in 1 : length(candidatoEscolhido$Nome_do_Candidato)){
if(candidatoEscolhido$Instituto[i] == pesquisa && candidatoEscolhido$Ano_da_Eleicao[i] == anoPesquisa){
existe <- TRUE;
}
}
return(existe)
}
existeCandidaturaNoAno = function(nomeCandidato, anoPesquisa){
existe <- FALSE;
candidatoEscolhido <- subset(data, data$Nome_do_Candidato == nomeCandidato);
for( i in 1 : length(candidatoEscolhido$Nome_do_Candidato)){
if(candidatoEscolhido$Ano_da_Eleicao[i] == anoPesquisa){
existe <- TRUE;
}
}
return(existe)
}
filtraPorCandidatoInstitutoEAno = function(nomeCandidato, nomeInstituto, anoPesquisa){
candidatoEscolhido <- subset(data, data$Nome_do_Candidato == nomeCandidato);
instituto <- subset(candidatoEscolhido, candidatoEscolhido$Instituto == nomeInstituto);
a <- subset(instituto, instituto$Ano_da_Eleicao == anoPesquisa)
return(a);
}
minmaxCandidatos = function(){
contador <- 1;
nomeTabela = vector();
anoTabela = vector();
minimo = vector();
maximo = vector();
candidatos <- qntCandidatosNaBaseDeDados();
anos <- qntAnosNaBaseDeDados();
for( i in 1 : length(candidatos$Nome_do_Candidato)){
nomeCandidato <- candidatos$Nome_do_Candidato[i];
for(k in 1: length(anos$Ano_da_Eleicao)){
anoCandidato <- anos$Ano_da_Eleicao[k]
existe <- existeCandidaturaNoAno(nomeCandidato, anoCandidato);
if(existe == TRUE){
filtroDeCandidatos <- filtraPorCandidatoEAno(nomeCandidato, anoCandidato);
minMax <- menorMaiorPesquisaPorCandidato(nomeCandidato, anoCandidato);
nomeTabela[contador] = nomeCandidato;
anoTabela[contador] = anoCandidato;
minimo[contador] = minMax[1];
maximo[contador] = minMax[2];
contador= contador+1;
}
}
}
mediaDosCandidatos <- data.frame(nomeDoCandidato = nomeTabela, anoDaPesquisa = anoTabela, pesquisaMinima = minimo, pesquisaMaximo = maximo, stringsAsFactors = FALSE);
return(mediaDosCandidatos);
}
mediaCandidatos = function () {
contador <- 1;
nomeTabela = vector();
pesquisaTabela = vector();
mediaTabela = vector();
anoTabela = vector();
candidatos <- qntCandidatosNaBaseDeDados();
anos <- qntAnosNaBaseDeDados();
pesquisas <- qntInstitutosBaseDeDados();
for( i in 1 : length(candidatos$Nome_do_Candidato)){
nomeCandidato <- candidatos$Nome_do_Candidato[i];
for(j in 1: length(pesquisas$Instituto)){
pesquisa <- pesquisas$Instituto[j];
for(k in 1: length(anos$Ano_da_Eleicao)){
ano <- anos$Ano_da_Eleicao[k]
existe <- existePesquisa(nomeCandidato,pesquisa, ano);
if(existe==TRUE){
intencoes <- filtraPorCandidatoInstitutoEAno(nomeCandidato,pesquisa,ano);
media <- mean(intencoes$Resultado_da_Pesquisa);
nomeTabela[contador] = nomeCandidato;
pesquisaTabela[contador] = pesquisa;
mediaTabela[contador] = media;
anoTabela[contador] = ano;
contador= contador+1;
}
}
}
}
mediaDosCandidatos <- data.frame(nomeDoCandidato = nomeTabela, pesquisa = pesquisaTabela, media = mediaTabela, ano = anoTabela, stringsAsFactors = FALSE);
return(mediaDosCandidatos)
}
moda <- function(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
}
tabelaQntCandidatos <- qntCandidatosNaBaseDeDados();
ggplot(data = tabelaQntCandidatos,
aes(x=reorder(Nome_do_Candidato, - as.numeric(vezes_apareceu)),
y = as.factor(vezes_apareceu), fill = Nome_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
tabelaQntInstitutos <- qntInstitutosBaseDeDados();
ggplot(data = tabelaQntInstitutos,
aes(x=reorder(Instituto, - as.numeric(vezes_intituto_apareceu)),
y = as.factor(vezes_intituto_apareceu), fill = Instituto)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Institutos na Base de Dados",
x = "Institutos", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
tabelaQntAnos <- qntAnosNaBaseDeDados();
ggplot(data = tabelaQntAnos,
aes(x=reorder(Ano_da_Eleicao, - as.numeric(vezes_anos_apareceu)),
y = as.factor(vezes_anos_apareceu), fill = Ano_da_Eleicao)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Anos de eleição na Base de Dados",
x = "Ano da Eleicao", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
tabelaPartidosAnos <- qntPartidosNaBaseDeDados();
ggplot(data = tabelaPartidosAnos,
aes(x=reorder(Partido_do_Candidato, - as.numeric(vezes_partido_apareceu)),
y = as.factor(vezes_partido_apareceu), fill = Partido_do_Candidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Partido na Base de Dados",
x = "Partido dos Candidatos", y = "Vezes que aparece nos dados") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Responder Aqui
#Responder Aqui
#Responder Aqui
minmax <- minmaxCandidatos();
ggplot(data = minmax,
aes(x=reorder(minmax$nomeDoCandidato, - as.numeric(minmax$pesquisaMinima)),
y = minmax$pesquisaMinima, fill = minmax$nomeDoCandidato)) +
geom_bar(stat = "identity", binwidth = NULL) +
labs(title = "Candidatos na Base de Dados",
x = "Nome do Candidato", y = "menor valor das intenções de voto de cada candidato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ano = data$Ano_da_Eleicao
moda(ano)
candidato = data$Nome_do_Candidato
moda(candidato)
instituto = data$Instituto
moda(instituto)
partido = data$Partido_do_Candidato
moda(partido)
library(caret)
data_erpa <- data
data_erpa$Nome_do_Candidato <- NULL
set.seed(500)
#Defininindo o particionamento dos dados
partition <- createDataPartition(y=data_erpa$Mes, p=.8, list=FALSE)
fit_data  <- data_erpa[partition,]
test_data <- data_erpa[-partition,]
ctrl <- trainControl(method = "cv", number = 5, search = "random")
set.seed(13)
#Neural Network
modelo.net <- train(
Resultado_Final ~.,
data       = fit_data,
method     = "nnet",
trControl  = ctrl,
preProcess = c('nzv'),
na.action  = na.omit)
net.predict <- predict(modelo.net, test_data)
test_data$pred <- net.predict
ggplot(test_data, aes(x = pred, y = Resultado_Final)) +
labs(title = "Modelo Neural Network - Obs vs Pred", x = "Predição", y = "Observado")+
geom_jitter(colour = "red") +
geom_abline(colour = "blue")
grid <- expand.grid(k = 1:50)
modelo.knn <- train(
Resultado_Final ~.,
data       = fit_data,
method     = "knn",
trControl  = ctrl,
preProcess = c('nzv'),
tuneGrid   = grid,
na.action  = na.omit
)
knn.predict <- predict(modelo.knn, test_data)
test_data$pred <- knn.predict
ggplot(test_data, aes(x = pred, y = Resultado_Final)) +
labs(title = "Modelo KNN - Obs vs Pred", x = "Predição", y = "Observado")+
geom_jitter(colour = "red") +
geom_abline(colour = "blue")
plot(modelo.knn)
modelo.mars <- train(
Resultado_Final ~.,
data = fit_data,
method = "earth",
trControl = ctrl,
preProcess = c('nzv'),
tuneLength = 10,
na.action = na.omit)
plot(modelo.mars)
mars.predict <- predict(modelo.mars, test_data)
test_data$pred <- mars.predict
ggplot(test_data, aes(x = pred, y = Resultado_Final)) +
labs(title = "Modelo MARS - Obs vs Pred", x = "Predição", y = "Observado")+
geom_jitter(colour = "red") +
geom_abline(colour = "blue")
set.seed(127)
#Cubist
modelo.cubist <- train(
Resultado_Final ~.,
data       = fit_data,
method     = "cubist",
trControl  = ctrl,
preProcess = c('nzv'),
na.action  = na.omit)
plot(modelo.cubist)
cubist.predict <- predict(modelo.cubist, test_data)
test_data$pred <- cubist.predict
ggplot(test_data, aes(x = pred, y = Resultado_Final)) +
labs(title = "Modelo Cubist - Obs vs Pred", x = "Predição", y = "Observado")+
geom_jitter(colour = "red") +
geom_abline(colour = "blue")
set.seed(849)
min(modelo.net$results$RMSE)
min(modelo.mars$results$RMSE)
min(modelo.cubist$results$RMSE)
mars.final.predict <- predict(modelo.mars, data_erpa)
data$MARS <- mars.final.predict
set.seed(7)
#Cubist
modelo.cubist.final <- train(
Resultado_Final ~.,
data       = data_erpa,
method     = "cubist",
na.action  = na.omit)
pred <- predict(modelo.cubist.final, data_erpa)
data$pred <- pred
data2018lula <- read_csv("../data/data2018lula.csv")
mars.lula.2018 <- predict(modelo.net, data2018lula)
data2018lula[data2018lula$Instituto == "CNT/MDA"]
data2018lula[(data2018lula$Instituto == "CNT/MDA")]
mars.lula.2018 <- predict(modelo.net, data2018lula)
data2018lula <- read_csv("../data/datalula2018.csv")
data2018lula <- read_csv("../data/datalula2018.csv")
mars.lula.2018 <- predict(modelo.net, data2018lula)
data2018lula <- read_csv("../data/datalula2018.csv")
mars.lula.2018 <- predict(modelo.net, data2018lula)
data2018lula <- read_csv("../data/datalula2018.csv")
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
data2018lula <- read_csv("../data/datalula2018.csv")
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
View(data2018lula)
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
data2018lula$Partido_do_Candidato[6] <- "PSDB"
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
data2018lula$Partido_do_Candidato[6] <- "PSDB"
data2018lula$MARS <- mars.lula.2018
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
data2018lula$Partido_do_Candidato[6] <- "PSDB"
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
set.seed(849)
min(modelo.net$results$RMSE)
min(modelo.mars$results$RMSE)
min(modelo.cubist$results$RMSE)
mars.final.predict <- predict(modelo.mars, data_erpa)
data$MARS <- mars.final.predict
set.seed(7)
#Cubist
modelo.cubist.final <- train(
Resultado_Final ~.,
data       = data_erpa,
method     = "cubist",
na.action  = na.omit)
pred <- predict(modelo.cubist.final, data_erpa)
data$pred <- pred
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
data2018lula$Partido_do_Candidato[6] <- "PSDB"
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
data2018lula$pred <- pred
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
data2018lula[data2018lula$Nome_do_Candidato == "Alvaro Dias"] <- NULL
data2018lula[(data2018lula$Nome_do_Candidato == "Alvaro Dias")] <- NULL
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
index <- 1
for (dt in data2018lula) {
if(dt$Nome_do_Candidato == "Alvaro Dias") {
data2018lula <- NULL
}
index <- index + 1
}
index <- 1
for (dt in data2018lula$Nome_do_Candidato) {
if(dt == "Alvaro Dias") {
data2018lula[index] <- NULL
}
index = index + 1
}
index <- 1
for (dt in data2018lula$Nome_do_Candidato) {
if(dt == "Alvaro Dias") {
data2018lula[index] <- NULL
}
index = index + 1
}
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
index <- 1
for (dt in data2018lula$Nome_do_Candidato) {
if(dt == "Alvaro Dias") {
data2018lula[index] <- NULL
}
index = index + 1
}
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
data2018lula$pred <- pred
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
View(data)
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
data2018lula$pred <- pred
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
ggplot(results.2018, aes(x=reorder(Nome_do_Candidato, as.numeric(result)),
y=result,
fill=as.factor(Nome_do_Candidato))) +
geom_bar(stat="identity", binwidth = NULL, na.rm = TRUE) +
coord_flip() +
labs(fill = "Candidato", title = "Predição do Resultado das eleições de 2018 com Lula",
x="",
y="Votos (%)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_blank())
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
data2018lula$pred <- pred
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
ggplot(results.2018, aes(x=reorder(Nome_do_Candidato, as.numeric(result)),
y=result,
fill=as.factor(Nome_do_Candidato))) +
geom_bar(stat="identity", binwidth = NULL, na.rm = TRUE) +
coord_flip() +
labs(fill = "Candidato", title = "Predição do Resultado das eleições de 2018 com Lula",
x="",
y="Votos (%)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_blank())
data2018lula <- read_csv("../data/datalula2018.csv")
median_inst <- median(data$Instituto)
data2018lula$Instituto[is.na(data2018lula$Instituto)] <- median_inst
mars.lula.2018 <- predict(modelo.mars, data2018lula)
data2018lula$MARS <- mars.lula.2018
pred <- predict(modelo.cubist.final, data2018lula)
data2018lula$pred <- pred
results.2018 <- data2018lula %>%
group_by(Nome_do_Candidato) %>%
summarise(result = (mean(pred) * 100)) %>%
arrange(desc(result))
results.2018
ggplot(results.2018, aes(x=reorder(Nome_do_Candidato, as.numeric(result)),
y=result,
fill=as.factor(Nome_do_Candidato))) +
geom_bar(stat="identity", binwidth = NULL, na.rm = TRUE) +
coord_flip() +
labs(fill = "Candidato", title = "Predição do Resultado das eleições de 2018 com Lula",
x="",
y="Votos (%)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_blank())
